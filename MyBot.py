import json
import time
import random
import re

import telebot
from telebot import types # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤


bot = telebot.TeleBot(token='6479236406:AAEM9osXPYtJPAx5wlPO2VB_eECBvV8NtTA', parse_mode='MARKDOWN')



@bot.message_handler(commands=['start'])
def start(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    btn1 = types.KeyboardButton("üìï –û–± –∞–≤—Ç–æ—Ä–µ")
    btn2 = types.KeyboardButton('üèπ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É')

    with open('reg.json', 'r') as f_o:
        data_from_json = json.load(f_o)

    user_id = message.from_user.id
    username = message.from_user.first_name
    user_exists = False
    for user_data in data_from_json:
        if str(user_id) in user_data:
            user_exists = True
            bot.reply_to(message=message,text='–¢—ã —É–∂–µ –Ω–∞—á–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–æ –º–Ω–æ–π, –Ω–æ —è –Ω–∞–ø–æ–º–Ω—é, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é üòâ')
            break

    if not user_exists:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
        data_from_json.append({user_id: {'username': username}})
        with open('reg.json', 'w') as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
        bot.reply_to(message=message, text=f'''–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, *{message.from_user.first_name} üòé‚Äç*!
    markup.add(btn2, btn1)
*–ù–µ–º–Ω–æ–≥–æ –æ–±–æ –º–Ω–µ:* –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫, —è –º–æ–≥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –ø—Ä–∏ –∏–∑—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.
–í–æ–æ–±—â–µ —è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, –Ω–æ —è –¥—É–º–∞—é, —á—Ç–æ –º–æ–π —Ö–æ–∑—è–∏–Ω –±—É–¥–µ—Ç –ø—Ä–æ—Ç–∏–≤, –µ—Å–ª–∏ —Ç—ã –±—É–¥–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ü–µ–ª–µ–π ü§´
\n‚ö†Ô∏è *–ü–æ–¥—Å–∫–∞–∑–∫–∞:* –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –º–Ω–æ–π –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é.''')



@bot.message_handler(commands=['words'])
def words(message):
    bot.reply_to(message=message, text=f"""–û—Ç–ø—Ä–∞–≤—å –∑–∞–¥–µ—Ä–∂–∫—É, –≤–æ—Ç —Ç–∞–∫: \n
*60* \n \n(–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —á–µ—Ä–µ–∑ 60 –º–∏–Ω—É—Ç) üòâ""")
    bot.register_next_step_handler(message, write)


def write(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    time_60 = types.KeyboardButton("‚è∞ 60 –º–∏–Ω—É—Ç")
    time_180 = types.KeyboardButton('üïú 3 —á–∞—Å–∞')
    time_480 = types.KeyboardButton('üï£ 9 —á–∞—Å–æ–≤')
    time_1240 = types.KeyboardButton('üïõ 24 —á–∞—Å–∞')
    update_words = types.KeyboardButton('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ª–æ–≤–∞')


    markup.add(time_60, time_180, time_480, time_1240)

    text = message.text
    user_id = message.from_user.id

    try:
        int(text)
        bot.reply_to(message=message, text=f'''–û—Ç–ª–∏—á–Ω–æ, –í—ã —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ = *{text}*''', reply_markup=markup)

        with open('words.json', 'r') as f_o:
            data_from_json = json.load(f_o)

        data_from_json.append({user_id: {'time': text}})


        with open('words.json', 'w') as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except ValueError:
        bot.reply_to(message=message, text=f'–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ –≤ –º–∏–Ω—É—Ç–∞—Ö!')
    complete_remind(message)

def complete_remind(message):
    okey = types.ReplyKeyboardMarkup(resize_keyboard=True)
    update_words = types.KeyboardButton('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ª–æ–≤–∞')
    okey.add(update_words)

    with open('word.json', 'r') as f_o:
        data_from_json = json.load(f_o)
    words = data_from_json



    for i in words:
        all = i['words']
        four_words = random.sample(all, 4)
        duplicates = []

        england, russian = random.SystemRandom().sample(four_words,1), random.SystemRandom().sample(four_words, 3)
        if england not in russian:
            russian.pop(1)
            russian.append(''.join(england))
            random.shuffle(russian)

        translate = (' '.join(england)).split('‚Äî')[1].replace(' ', '')
        russian, only_england = ', '.join(russian), ', '.join(england)
        only_england = re.sub('[–Å—ë–ê-—è-‚Äî]', '', only_england)
        russian = re.sub("[a-zA-Z-‚Äî]", "", russian)
        four_words = ', '.join(four_words)

        bot.reply_to(message=message, text=f'–í–∞—à–∏ —Å–ª–æ–≤–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è: {four_words}', reply_markup=okey)
        bot.register_next_step_handler(message, update)

def update(message):
    if message.text == 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ª–æ–≤–∞':
        complete_remind(message)
    else:
        return




@bot.message_handler(commands=['reminds'])
def reminds(message):
    user_id = message.from_user.id
    with open('word.json', 'r') as f_o:
        data_from_json = json.load(f_o)

    text = []
    for i in data_from_json:
        if str(user_id) in i:
            text.append((i[str(user_id)]['text']))
    text = ', '.join(text)
    bot.reply_to(message=message, text=f'–í–∞—à–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {text}')


bot.polling()