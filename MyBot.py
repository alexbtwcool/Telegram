import json
import time
import random
import re
import schedule
import asyncio
import telebot
from telebot import types # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤


bot = telebot.TeleBot(token='6479236406:AAEM9osXPYtJPAx5wlPO2VB_eECBvV8NtTA', parse_mode='MARKDOWN')



@bot.message_handler(commands=['start'])
def start(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    btn1 = types.KeyboardButton("üìï –û–± –∞–≤—Ç–æ—Ä–µ")
    btn2 = types.KeyboardButton('üèπ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É')

    with open('reg.json', 'r') as f_o:
        data_from_json = json.load(f_o)
# –û–û–ü = user_id, username
    user_id = message.from_user.id
    username = message.from_user.first_name
    user_exists = False
    for user_data in data_from_json:
        if str(user_id) in user_data:
            user_exists = True
            bot.reply_to(message=message,text='–¢—ã —É–∂–µ –Ω–∞—á–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–æ –º–Ω–æ–π, –Ω–æ —è –Ω–∞–ø–æ–º–Ω—é, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é üòâ')
            break

    if not user_exists:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
        data_from_json.append({user_id: {'username': username}})
        with open('reg.json', 'w') as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
        bot.reply_to(message=message, text=f'''–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, *{message.from_user.first_name} üòé‚Äç*!
    markup.add(btn2, btn1)
*–ù–µ–º–Ω–æ–≥–æ –æ–±–æ –º–Ω–µ:* –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫, —è –º–æ–≥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –ø—Ä–∏ –∏–∑—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.
–í–æ–æ–±—â–µ —è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, –Ω–æ —è –¥—É–º–∞—é, —á—Ç–æ –º–æ–π —Ö–æ–∑—è–∏–Ω –±—É–¥–µ—Ç –ø—Ä–æ—Ç–∏–≤, –µ—Å–ª–∏ —Ç—ã –±—É–¥–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ü–µ–ª–µ–π ü§´
\n‚ö†Ô∏è *–ü–æ–¥—Å–∫–∞–∑–∫–∞:* –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –º–Ω–æ–π –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é.''')



@bot.message_handler(commands=['words'])
def words(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    time_60 = types.KeyboardButton("‚è∞ 1 —á–∞—Å")
    time_180 = types.KeyboardButton('üïú 3 —á–∞—Å–∞')
    time_480 = types.KeyboardButton('üï£ 9 —á–∞—Å–æ–≤')
    time_1240 = types.KeyboardButton('üïõ 24 —á–∞—Å–∞')


    markup.add(time_60, time_180, time_480, time_1240)
    bot.reply_to(message=message, text=f"""–û—Ç–ø—Ä–∞–≤—å –∑–∞–¥–µ—Ä–∂–∫—É, –≤–æ—Ç —Ç–∞–∫: \n
*60* \n \n(–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —á–µ—Ä–µ–∑ 60 –º–∏–Ω—É—Ç), —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –ø–∞–Ω–µ–ª–∏ üòâ""", reply_markup=markup)
    bot.register_next_step_handler(message, write)



def write(message):


    text = message.text
    user_id = message.from_user.id
    if text == "‚è∞ 1 —á–∞—Å":
        text = 60
    elif text == 'üïú 3 —á–∞—Å–∞':
        text = 180
    elif text == 'üï£ 9 —á–∞—Å–æ–≤':
        text = 480
    elif text == 'üïõ 24 —á–∞—Å–∞':
        text = 1240
    else:
        text = message.text
        try:
            text = int(text)
        except ValueError:
            bot.reply_to(message, text='‚ö†Ô∏è –ó–ê–î–ï–†–ñ–ö–ê –î–û–õ–ñ–ù–ê –ë–´–¢–¨ –£–ö–ê–ó–ê–ù–ê –í –¶–ò–§–†–ê–•!!!')
            return
        print(text)
    try:

        user_exists = False
        with open('time_user.json', 'r') as f_o:
            data_from_json = json.load(f_o)
        for item in data_from_json:
            if str(user_id) in item:
                bot.reply_to(message=message, text='–í—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ. –ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Å–ª–æ–≤–∞ - /delete')
                user_exists = True
                return

        if user_exists == False:
            data_from_json.append({user_id: {'time': text}})
            bot.reply_to(message=message, text=f'''–û—Ç–ª–∏—á–Ω–æ, –≤—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ *{text} –º–∏–Ω—É—Ç(–∞)*''')
            complete_remind(message)

            with open('time_user.json', 'w') as f_o:
                json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)

    except ValueError:
        if type(int(text)) != int:
            bot.reply_to(message=message, text=f'–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ –≤ –º–∏–Ω—É—Ç–∞—Ö!')
            words(message)


def complete_remind(message):
    okey = types.ReplyKeyboardMarkup(resize_keyboard=True)
    update_words = types.KeyboardButton('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ª–æ–≤–∞')
    okey.add(update_words)
    user_id = message.from_user.id

    text_words = []
    for _ in range(2):
        with open('word.json', 'r') as f_o:
            data_from_json = json.load(f_o)
        words = data_from_json


        for i in words:
            all = i['words']
            four_words = random.sample(all, 4)
            duplicates = []

            england, russian = random.SystemRandom().sample(four_words,1), random.SystemRandom().sample(four_words, 3)
            if england not in russian:
                russian.pop(1)
                russian.append(''.join(england))
                random.shuffle(russian)

            translate = (' '.join(england)).split('‚Äî')[1].replace(' ', '')
            russian, only_england = ', '.join(russian), ', '.join(england)
            only_england = re.sub('[–Å—ë–ê-—è-‚Äî]', '', only_england)
            russian = re.sub("[a-zA-Z-‚Äî]", "", russian)
            print(four_words)
            four_words = ', '.join(four_words)
            print(only_england, russian)


            bot.send_message(user_id, text=f'–í–∞—à–∏ —Å–ª–æ–≤–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è: {four_words}', reply_markup=okey)
            with open('bind.json', 'r') as f_o:
                data_from_json = json.load(f_o)

            data_from_json.append({user_id: [only_england, russian, translate]})

            with open('bind.json', 'w') as f_o:
                json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)


        bot.register_next_step_handler(message, update)




def update(message):
    test = 1
    if message.text == 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ª–æ–≤–∞' and test == 1:
        test+=1
        complete_remind(message)


@bot.message_handler(commands=['delete'])
def delete(message):
    user_id = message.from_user.id
    with open('time_user.json', 'r') as f_o:
        data_from_json = json.load(f_o)


    for user in data_from_json:
        if str(user_id) in user:
            data_from_json.remove(user)
    with open('time_user.json', 'w') as f_o:
        json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)

    with open('bind.json') as f_o:
        data_from_json = json.load(f_o)

    for _ in range(2):
        for user in data_from_json:
            if str(user_id) in user:
                data_from_json.remove(user)


    with open('bind.json', 'w') as f_o:
        json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    bot.reply_to(message, text="‚úÖ –ì–æ—Ç–æ–≤–æ, –≤–∞—à–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.")


@bot.message_handler(commands=['reminds'])
def reminds(message):
    user_id = message.from_user.id
    with open('bind.json', 'r') as f_o:
        data_from_json = json.load(f_o)
    for i in data_from_json:
        if str(user_id) in i:
            bot.reply_to(message, text='‚Äî'.join(i[str(user_id)]))


bot.polling()